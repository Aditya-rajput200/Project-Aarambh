generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(uuid())
  
  name     String
  email    String   @unique
  phone    String   @unique
  password String
  location  String    @default("India")
  image     String  @default("adi.png")
  

  workers  Worker[]
  orders   Booking[]
  reviews  Review[]
}

model Booking { 
  id          String  @unique  @id @default(cuid())
  user        User     @relation(fields: [userId], references: [id]) 
  userId      String 
  worker      Worker   @relation(fields: [workerId], references: [id])
  workerId    String

service     Service  @relation(fields: [serviceId], references: [id])
  serviceId   String

  location    String
  date        DateTime
  time        String
  price       Int
  status      BookingStatus

  isActive    Boolean  @default(true)
  isDelivered Boolean  @default(false)
  isPaid      Boolean  @default(false)
}

model Category {
  id          String    @id @default(uuid())
  name        String
  description String
  image       String
  services    Service[]
}

model Service {
  id          String  @id @default(uuid()) 
  name        String
  description String
  
  category    Category @relation(fields: [categoryId], references: [id])
  categoryId  String


  bookings    Booking[]
}
  

model Worker {
  id          String    @id @default(cuid())
  name        String
  email       String    @unique
  phone       Int       @unique
  password    String
  adhaarId    Int       @unique
  isVerified  Boolean   @default(false)
  isActive    Boolean   @default(true)

  reviews     Review[]
  bookings    Booking[]
  user        User      @relation(fields: [userId], references: [id])  
  userId      String
}

model Review {
  id          String   @id @default(cuid())
  stars       Int
  comment     String

  user        User     @relation(fields: [userId], references: [id])
  userId      String
  worker      Worker   @relation(fields: [workerId], references: [id])
  workerId    String
  
}

enum BookingStatus {
  pending
  delivered
  paid
}
enum User_Role {
  USER
  ADMIN
  WORKER
}